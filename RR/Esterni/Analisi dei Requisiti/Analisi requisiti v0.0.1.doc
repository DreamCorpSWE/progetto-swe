
Introduzione

(G) = aggiungere al Glossario

1.1) Obiettivo del documento
Questo documento si pone come obiettivo quello di effettuare un' analisi dei
requisiti per la progettazione e lo sviluppo del capitolato(G) "G&B: monitoraggio
intelligente di processi DevOps" (Capitolato C3) proposto dall'azienda Zucchetti.

1.2) Obiettivo del prodotto
Il sistema che richiediamo sar√† un plug-in di Grafana(G), scritto in linguaggio
JavaScript(G), che legger√† da un file json(G) la definizione della rete
Bayesiana(G) e quindi permetter√† di associare ad alcuni nodi della rete dati
prelevati dal flusso del monitoraggio.
Ad intervalli predefiniti, verranno eseguiti i calcoli previsti dalla rete
Bayesiana, modificando le probabilit√† dei nodi derivati in base ai dati rilevati
dal campo.

1.3) Riferimenti (da aggiungere altre fonti)
Capitolato C3: G&B: monitoraggio intelligente di processi DevOps.
Link al capitolato: https://www.math.unipd.it/~tullio/IS-1/2018/Progetto/C3.pdf
Grafana: https://grafana.com/
Libreria Open Source per reti bayesiane: https://github.com/vangj/jsbayes
Slide lezioni utilizzate durante il corso di Ingegneria del Software: https://www.math.unipd.it/~tullio/IS-1/2018/

1.4) Glossario
I termini al cui termine Ë riportato il simbolo (G) sono riportati nel documento "Glossario v1.0.0", Si tratta di termini tecnici il cui significato deve essere spiegato.

2) Descrizione prodotto

2.1) Scopo del prodotto
Si devono realizzare dei sistemi che possano applicare metodi di intelligenza
artificiale al flusso dei dati raccolti, al fine non solo di monitorare la
‚Äúliveliness‚Äù del sistema ma anche per consigliare gli interventi o quanto meno
le zone di intervento alla linea di produzione del software.
Il presente capitolato ha per oggetto l‚Äôaffidamento della fornitura per la
realizzazione di un plug-in(G) per lo strumento di monitoraggio Grafana che
applichi reti Bayesiane al flusso dei dati ricevuti per allarmi o segnalazioni
tra gli operatori del servizio Cloud e la linea di produzione del software.

2.2) Funzionalit‡ del prodotto
1. Leggere la definizione della rete Bayesiana da un file in formato json.
2. Associare dei nodi della rete, letta dal file json, ad un flusso di dati
presente in Grafana.
3. Applicare il ricalcolo delle probabilit√† della rete secondo regole temporali
prestabilite.
4. Fornire nuovi dati al sistema di Grafana derivati dai nodi della rete non
collegati al flusso di
monitoraggio.
5. Rendere disponibili i dati al sistema di creazione di grafici e dashboard per
la loro visualizzazione.

2.3) Tipologia di utenti
Il prodotto √® rivolto a tutti coloro che gestiscono sistemi di raccolta e
collezione di dati in modo da poterli monitorare ed intervenire qualora sia
necessario grazie agli allarmi forniti dal plug-in.
Gli utenti devono avere familiarit‡ con il tool di monitoraggio Grafana.

2.4) Vincoli di progettazione

2.4.1) Requisiti obbligatori
1. Leggere la definizione della rete Bayesiana da un file in formato json.
2. Associare dei nodi della rete, letta dal file json, ad un flusso di dati
presente in Grafana.
3. Applicare il ricalcolo delle probabilit√† della rete secondo regole temporali
prestabilite.
4. Fornire nuovi dati al sistema di Grafana derivati dai nodi della rete non
collegati al flusso di
monitoraggio.
5. Rendere disponibili i dati al sistema di creazione di grafici e dashboard per
la loro visualizzazione.


2.4.2) Requisiti opzionali
1. Possibilit√† di definire ‚Äúalert‚Äù in base a livelli di soglia raggiunti dai
nodi non collegati al flusso dei dati.
2. Possibilit√† di disegnare la rete Bayesiana con un piccolo editor grafico
specializzato.
3. Possibilit√† di applicare pi√π reti Bayesiane in oggetti di monitoraggio
diversi.
4. Possibilit√† di creare una rete Bayesiana a partire dai dati raccolti sul
campo anzich√© svilupparla con la
collaborazione degli esperti del settore.
5. Identificare altri metodi di Intelligenza Artificiale oltre alla rete
Bayesiana che siano applicabili all‚Äôanalisi del flusso di dati di monitoraggio
al fine di aiutare la linea di produzione del software a scoprire i punti
migliorabili dalla propria procedura.

2.4.3) Requisiti opzionali che sono stati scelti da implementare
1. Possibilit√† di definire ‚Äúalert‚Äù in base a livelli di soglia raggiunti dai
nodi non collegati al flusso dei dati.
2. Possibilit√† di applicare pi√π reti Bayesiane in oggetti di monitoraggio
diversi.



2.5) Piattaforma di esecuzione
Essendo il prodotto un plugin per Grafana, occorre aver scaricato e configurato Grafana in modo da poter installare il plugin.

3) Grafana e reti Bayesiane

3.1) Grafana
Grafana Ë uno strumento di monitoraggio dati open-source, tramite delle dashboard Ë possibile visualizzare e tenere sottocontrollo i risultati delle query loro associate e lanciare un allarme in caso di superamento di valori soglia prestabiliti dall'utente. E' molto utilizzato dalle aziende per via delle sue molteplici funzionalit‡ espandibili tramite vari plugin sviluppati dagli utenti.

3.2) Rete Bayesiana
Una Rete Bayesiana √® un grafo, ossia un'insieme di nodi e frecce. I nodi
indicano le variabili di un problema in gioco, mentre le frecce indicano i
rapporti di causalit√† tra di esse e costituiscono un potente mezzo per
modellizzare un problema ed esprimere i rapporti tra le grandezze in gioco.
Ad una rete bayesiana possono essere fornite delle "evidenze", ossia valori noti
di variabili del problema. La rete calcola come la conoscenza di queste
variabili modifica la probabilit√† delle altre variabili.
Anche se non si ha idea di quali siano i rapporti di mutua dipendenza tra
variabili, algoritmi di "structure learning" riescono a ricostruire la corretta
struttura della rete, sempre che si abbia a disposizione un adeguata base dati.
Sostanzialmente le Reti Bayesiane possono essere utilizzate come potenti mezzi
di "machine learning". Esse riescono ad individuare i fattori decisivi che
determinano i valori di una variabile, individuare la categoria cui appartengono
determinate osservazioni e prevedere comportamenti futuri in base all'esperienza
di quelli passati.

4) Casi d'uso

5) Requisiti

Ad ogni requisito verranno assegnati dei codici per poterli identificare in modo univoco seguendo la procedura riportata nel documento Norme di Progetto v1.0.0. Questa sezione viene qui ripetuta in modo da permettere a chi non avesse la possibilit‡ di visualizzare questo documento di poterne prenderne visione.
Ad ogni requisito individuato dallíanalisi verr‡ associato un identificatore nel seguente formato: 
R-[Priorit‡][Tipo][Codice]
In seguito viene descritto il significato dei vari campi:

Priorit‡:  Obbligatorio, Opzionale 
ñC: (Compulsory o obbligatorio in italiano), indica un  requisito che Ë indispensabile richiesto dal committente.
ñD: Indica un requisito desiderabile ma non indispensabile perciÚ non Ë strettamente necessario implementarlo
ñO: Indica un requisito opzionale che puÚ essere utile ma verr‡ valutato in un secondo momento se implementarlo o meno.

Tipo:  Una lettera maiuscola indica il tipo del requisito sia che esso sia funzionale che non funzionale:
ñF:  Requisito funzionale. Descrivono le funzionalit‡ e i servizi che il software deve offrire ovvero il comportamento generale dell'applicazione.
ñQ: Requisito di  qualit‡. Requisiti per garantire la soddisfazione del cliente nei confronti del prodotto come l'efficacia e l'efficienza.
ñV:  Requisito di  vincolo. E' un vincolo dettato dal proponente dell'appalto e deve essere rispettato
-P: Requisito prestazionale. Vincolo relativo alle prestazioni del sistema.

Codice: Si riferisce alla posizione del requisito all'interno del documento, Ë formato uno o pi˘ numeri naturali separati da punti.

Requisiti funzionali
-UC1: Inserire definizione rete bayesiana
-UC1.1: Inserire la definizione della rete bayesiana sottoforma di file.json
-UC1.2: Inserire definizione rete bayesiana sottoforma di codice json
-UC2: Associare un nodo della rete ad un flusso dati di Grafana
-UC3: Rimuovere un nodo della rete associato ad un flusso dati di
Grafana
-UC3.1 Annullamento operazione associazione multipla
-UC3.2 Rimozione nodo precedentemente associato e associazione nuovo nodo
-UC4 Visualizzazione messaggio di conferma annullamento operazione
-UC5: Rimozione di un nodo della rete associato ad un flusso dati di Grafana
-UC6: VIsualizzazione errore
-UC6.1: Visualizzazione errore interpretazione rete bayesiana
-UC6.2: Visualizzazione errore invio del messaggio di alert
-UC7: Visualizzazione grafici dei dati provenienti dal ricalcolo delle probabilit‡ della libreria jsbayes dopo la ricezione di un alert di Grafana
-UC8: modifica grafici di visualizzazione nodi non monitorati
-UC9: Ricezione di dati risultato della BNI (Bayesian Network Inference) (G) per costruire panels

Requisiti di qualit‡
-La  progettazione e il codice devono seguire le norme e le metriche riportate nel documento allegato "Piano di qualifica v 1.0.0"
-Devono essere rispettate le norme definite nel documento "Norme di progetto v1.0.0"
-Il codice JavaScript(G) deve attenersi allo stile Javascript airbnb(G)
-Dovr‡ essere fornito un manuale guida in lingua italiana sull'utilizzo del plugin
-Il codice sorgente deve essere pubblicato su un repository di Github
-L'applicativo deve essere sviluppato usando il framework (cosa useremo per scrivere il codice?)
-Dovr‡ essere fornito un file per il tracciamento di tutti i bug presenti nel sistema
-Dovranno essere consegnati i risultati dei test di unit‡ (li useremo?)
-Utilizzare il processo di continuous integration durante lo sviluppo del progetto (la useremo?)

Requisiti di vincolo
-Il plugin deve essere sviluppato in Javascript

Requisiti prestazionali
Le prestazioni del nostro sistema non dipendono dal plugin ma trattandosi di reti bayesiane le prestazioni dipendono dalla velocit‡ di calcolo della libreria jsbayes.js e dalla complessit‡ della rete che si sta osservando. Detto ciÚ non ha abbiamo osservato requisiti prestazionali.